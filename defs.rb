ZERO=->(f){->(v){v}}
ONE=->(f){->(v){f.(v)}}
THREE=->(f){->(v){f.(f.(f.(v)))}}
FIVE=->(f){->(v){f.(f.(f.(f.(f.(v)))))}}
TEN=->(f){->(v){f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(v))))))))))}}
FIFTEEN=->(f){->(v){f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(v)))))))))))))))}}
HUNDRED=->(f){->(v){f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(f.(v))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))}}
BTRUE=->(a){->(b){a}}
BFALSE=->(a){->(b){b}}
NOT=->(bool){bool.(BFALSE).(BTRUE)}
IS_ZERO=->(n){n.(->(x){BFALSE}).(BTRUE)}
PAIR=->(left){->(right){->(f){f.(left).(right)}}}
LEFT=->(p){p.(->(left){->(right){left}})}
RIGHT=->(p){p.(->(left){->(right){right}})}
INC=->(n){->(f){->(v){f.(n.(f).(v))}}}
PHI=->(pair){PAIR.(INC.(LEFT.(pair))).(LEFT.(pair))}
DEC=->(n){RIGHT.(n.(PHI).(PAIR.(ZERO).(ZERO)))}
ADD=->(a){->(b){a.(INC).(b)}}
SUB=->(a){->(b){b.(DEC).(a)}}
MUL=->(a){->(b){a.(ADD.(b)).(ZERO)}}
IS_LEQ=->(a){->(b){IS_ZERO.(SUB.(a).(b))}}
IS_LT=->(a){->(b){NOT.(IS_LEQ.(b).(a))}}
Y=->(f){->(g){->(n){f.(g.(g)).(n)}}.(->(g){->(n){f.(g.(g)).(n)}})}
MOD_IMPROVER=->(partial){->(a){->(b){IS_LT.(a).(b).(a).(->(x){partial.(SUB.(a).(b)).(b).(x)})}}}
MOD=Y.(MOD_IMPROVER)
EMPTY=PAIR.(BTRUE).(BTRUE)
IS_EMPTY=LEFT
CONS=->(item){->(lst){PAIR.(BFALSE).(PAIR.(item).(lst))}}
HEAD=->(lst){LEFT.(RIGHT.(lst))}
TAIL=->(lst){RIGHT.(RIGHT.(lst))}
RANGE_BUILDER_IMPROVER=->(partial){->(lst){->(n){IS_ZERO.(n).(lst).(->(x){partial.(CONS.(n).(lst)).(DEC.(n)).(x)})}}}
RANGE=Y.(RANGE_BUILDER_IMPROVER).(EMPTY)
FOLD_IMPROVER=->(partial){->(lst){->(initial){->(f){IS_EMPTY.(lst).(initial).(->(x){f.(HEAD.(lst)).(partial.(TAIL.(lst)).(initial).(f)).(x)})}}}}
FOLD=Y.(FOLD_IMPROVER)
MAP=->(lst){->(f){FOLD.(lst).(EMPTY).(->(item){->(lst){CONS.(f.(item)).(lst)}})}}
B=TEN
F=INC.(B)
I=INC.(F)
U=INC.(I)
Z=INC.(U)
FIZZ=CONS.(F).(CONS.(I).(CONS.(Z).(CONS.(Z).(EMPTY))))
BUZZ=CONS.(B).(CONS.(U).(CONS.(Z).(CONS.(Z).(EMPTY))))
FIZZBUZZ=CONS.(F).(CONS.(I).(CONS.(Z).(CONS.(Z).(BUZZ))))
DIV_IMPROVER=->(partial){->(num){->(denom){IS_LT.(num).(denom).(ZERO).(->(x){INC.(partial.(SUB.(num).(denom)).(denom)).(x)})}}}
DIV=Y.(DIV_IMPROVER)
TO_DIGITS_IMPROVER=->(partial){->(result){->(n){IS_LT.(n).(TEN).(CONS.(n).(result)).(->(x){partial.(CONS.(MOD.(n).(TEN)).(result)).(DIV.(n).(TEN)).(x)})}}}
TO_DIGITS=Y.(TO_DIGITS_IMPROVER).(EMPTY)
PROGRAM=->(limit){MAP.(RANGE.(limit)).(->(n){IS_ZERO.(MOD.(n).(FIFTEEN)).(FIZZBUZZ).(IS_ZERO.(MOD.(n).(THREE)).(FIZZ).(IS_ZERO.(MOD.(n).(FIVE)).(BUZZ).(TO_DIGITS.(n))))})}
RESULT=PROGRAM.(HUNDRED)
